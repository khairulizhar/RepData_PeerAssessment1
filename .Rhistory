help
help()
q()
getwd
get wd
getwd()
x <- list(2, "a", "b", TRUE)
x
class(x[2])
class(x[[2]])
x <- c(3, 5, 1, 10, 12, 6)
x
x[x < 6] == 0
x[x <= 5] <- 0
x[x < 6] <- 0
x[x == 0] <- 6
x[x == 0]
x[x < 6]
swirl()
library(swirl)
swirl()
my_sqrt <-
sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my
my_div
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10, by=0.5)
my_seq <- seq(5,10,length=30)
length()
my_seq
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq
)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times =
| 10).
rep(c(0, 1, 2), times = 10).
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0, 10, by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
swirl()
swirl()
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
dir()
?list.files
args(list.files())
args(list.files)
old.dir <- list.files()
old.dir <- getwd()
dir.create
dir.create("testdir")
setwd(testdir)
setwd("testdir")
getwd()
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info()
file.info("mytest.R")
rename(mytest.R,mytest2.R)
rename("mytest.R","mytest2.R")
rename()
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path()
file.path("folder1", "folder2")
?dir.create
getwd()
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
unlink("testdir")
unlink("testdir", recursive = TRUE)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
print(tf)
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Khairul")
my_name <- c(my_char, "Swirl")
my_name
paste(my_char, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
c("X", "Y", "Z")
c("X", "Y", "Z"), sep ="")
c("X", "Y", "Z"), sep =""))
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
is.na()
my_na <- is.na()
my_na <- na()
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum()
sum(my_na)
my_data
0/0
Inf-inf
Inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[3,5,7]
x[==3,==5,==7]
x[=3,=5,=7]
c(3,5,7)
c[3,5,7]
c[x=3,5,7]
?info
c(3,5,7)
c[(3,5,7)]
c([3,5,7])
c(3,5,7)
x
x[c(3,5,7)]
bye
x[0]
x[c(1000)]
x[c(3000)]
bye()
exit
exit()
!(8>4)
!(8 > 4) ||  5 == 5.0 && 7.8 >= 7.79
FALSE || TRUE && 6 != 4 || 9 > 4
FALSE && 6 >= 6 || 7 >= 8 || 50 <= 49.5
isTRUE(!TRUE)
!isTRUE(4 < 3)
identical('hello', 'Hello')
!identical(7, 7)
identical(5 > 4, 3 < 3.1)
xor(4 >= 9, 8 != 8.0)
library(swirl)
swirl()
d1 <- Sys.Date()
class()
class(d1)
unclass(d1)
d1
0
exit
bye()
library(swirl)
swirl()
d2 <- Date("1969-01-01")
date("1969-01-01")
d2 <- "1969-01-01"
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- .POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
d1 <- weekdays()
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days'
)
library(swirl)
swirl()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))[1] 8
evaluate(function(x){x[1]}, c(8, 4, 0))
[1] 8
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram(c("Holla", "Everyone", ",", "how", "are", "we", "today", "?"))
submit()
telegram(c("Hello", "world", ",", "how", "are", "we", "today", "?"))
submit()
submit()
mad_libs(place = "London", adjustive = "brexit", noun = "dog")
submit()
submit()
"I" %p% "love" %p% "R!"
setwd("C:/Users/Khairul/RepData_PeerAssessment1")
library(ggplot)
library(ggplot2)
install.packages("ggplot2")
